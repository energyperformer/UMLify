13
NETWORK DIAGRAM WITH NWDIAG
13
Network Diagram with nwdiag
A network diagram is a visual representation of a computer or telecommunications network. It illustrates
the arrangement and interconnections of network components, including servers, routers, switches,
hubs, and devices. Network diagrams are invaluable tools for network engineers and administrators to
understand, set up, and troubleshoot networks.
They are also essential for visualizing the
structure and flow of data in a network, ensuring optimal performance and security.
nwdiag, developed by Takeshi Komiya, provides a streamlined platform to swiftly sketch network dia-
grams. We extend our gratitude to Takeshi for this innovative tool!
Given its intuitive syntax, nwdiag has been seamlessly integrated into PlantUML. The examples show-
cased here are inspired by the ones documented by Takeshi.
13.1
Simple diagram
13.1.1
Define a network
@startuml
nwdiag {
network dmz {
address = "210.x.x.x/24"
}
}
@enduml
13.1.2
Define some elements or servers on a network
@startuml
nwdiag {
network dmz {
address = "210.x.x.x/24"
web01 [address = "210.x.x.1"];
web02 [address = "210.x.x.2"];
}
}
@enduml
13.1.3
Full example
@startuml
nwdiag {
network dmz {
address = "210.x.x.x/24"
web01 [address = "210.x.x.1"];
web02 [address = "210.x.x.2"];
}
PlantUML Language Reference Guide (1.2025.0)
306 / 606


13.2
Define multiple addresses
13
NETWORK DIAGRAM WITH NWDIAG
network internal {
address = "172.x.x.x/24";
web01 [address = "172.x.x.1"];
web02 [address = "172.x.x.2"];
db01;
db02;
}
}
@enduml
13.2
Define multiple addresses
@startuml
nwdiag {
network dmz {
address = "210.x.x.x/24"
// set multiple addresses (using comma)
web01 [address = "210.x.x.1, 210.x.x.20"];
web02 [address = "210.x.x.2"];
}
network internal {
address = "172.x.x.x/24";
web01 [address = "172.x.x.1"];
web02 [address = "172.x.x.2"];
db01;
db02;
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
307 / 606


13.3
Grouping nodes
13
NETWORK DIAGRAM WITH NWDIAG
13.3
Grouping nodes
13.3.1
Define group inside network definitions
@startuml
nwdiag {
network Sample_front {
address = "192.168.10.0/24";
// define group
group web {
web01 [address = ".1"];
web02 [address = ".2"];
}
}
network Sample_back {
address = "192.168.20.0/24";
web01 [address = ".1"];
web02 [address = ".2"];
db01 [address = ".101"];
db02 [address = ".102"];
// define network using defined nodes
group db {
db01;
db02;
}
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
308 / 606


13.3
Grouping nodes
13
NETWORK DIAGRAM WITH NWDIAG
13.3.2
Define group outside of network definitions
@startuml
nwdiag {
// define group outside of network definitions
group {
color = "#FFAAAA";
web01;
web02;
db01;
}
network dmz {
web01;
web02;
}
network internal {
web01;
web02;
db01;
db02;
}
}
@enduml
13.3.3
Define several groups on same network
13.3.4
Example with 2 group
@startuml
nwdiag {
PlantUML Language Reference Guide (1.2025.0)
309 / 606


13.3
Grouping nodes
13
NETWORK DIAGRAM WITH NWDIAG
group {
color = "#FFaaaa";
web01;
db01;
}
group {
color = "#aaaaFF";
web02;
db02;
}
network dmz {
address = "210.x.x.x/24"
web01 [address = "210.x.x.1"];
web02 [address = "210.x.x.2"];
}
network internal {
address = "172.x.x.x/24";
web01 [address = "172.x.x.1"];
web02 [address = "172.x.x.2"];
db01 ;
db02 ;
}
}
@enduml
[Ref. QA-12663]
13.3.5
Example with 3 groups
@startuml
nwdiag {
group {
color = "#FFaaaa";
web01;
db01;
}
group {
color = "#aaFFaa";
web02;
db02;
}
group {
color = "#aaaaFF";
PlantUML Language Reference Guide (1.2025.0)
310 / 606


13.4
Extended Syntax (for network or group)
13
NETWORK DIAGRAM WITH NWDIAG
web03;
db03;
}
network dmz {
web01;
web02;
web03;
}
network internal {
web01;
db01 ;
web02;
db02 ;
web03;
db03;
}
}
@enduml
[Ref. QA-13138]
13.4
Extended Syntax (for network or group)
13.4.1
Network
For network or network’s component, you can add or change:
• addresses (separated by comma ,);
• color;
• description;
• shape.
@startuml
nwdiag {
network Sample_front {
address = "192.168.10.0/24"
color = "red"
// define group
group web {
web01 [address = ".1, .2", shape = "node"]
web02 [address = ".2, .3"]
}
}
network Sample_back {
address = "192.168.20.0/24"
PlantUML Language Reference Guide (1.2025.0)
311 / 606


13.4
Extended Syntax (for network or group)
13
NETWORK DIAGRAM WITH NWDIAG
color = "palegreen"
web01 [address = ".1"]
web02 [address = ".2"]
db01 [address = ".101", shape = database ]
db02 [address = ".102"]
// define network using defined nodes
group db {
db01;
db02;
}
}
}
@enduml
13.4.2
Group
For a group, you can add or change:
• color;
• description.
@startuml
nwdiag {
group {
color = "#CCFFCC";
description = "Long group description";
web01;
web02;
db01;
}
network dmz {
web01;
web02;
}
network internal {
web01;
web02;
db01 [address = ".101", shape = database];
}
}
PlantUML Language Reference Guide (1.2025.0)
312 / 606


13.5
Using Sprites
13
NETWORK DIAGRAM WITH NWDIAG
@enduml
[Ref. QA-12056]
13.5
Using Sprites
You can use all sprites (icons) from the Standard Library or any other library.
Use the notation <$sprite> to use a sprite, \n to make a new line, or any other Creole syntax.
@startuml
!include <office/Servers/application_server>
!include <office/Servers/database_server>
nwdiag {
network dmz {
address = "210.x.x.x/24"
// set multiple addresses (using comma)
web01 [address = "210.x.x.1, 210.x.x.20",
description = "<$application_server>\n web01"]
web02 [address = "210.x.x.2",
description = "<$application_server>\n web02"];
}
network internal {
address = "172.x.x.x/24";
web01 [address = "172.x.x.1"];
web02 [address = "172.x.x.2"];
db01 [address = "172.x.x.100",
description = "<$database_server>\n db01"];
db02 [address = "172.x.x.101",
description = "<$database_server>\n db02"];
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
313 / 606


13.6
Using OpenIconic
13
NETWORK DIAGRAM WITH NWDIAG
[Ref. QA-11862]
13.6
Using OpenIconic
You can also use the icons from OpenIconic in network or node descriptions.
Use the notation <&icon> to make an icon, <&icon*n> to multiply the size by a factor n, and \n to make
a newline:
@startuml
nwdiag {
group nightly {
color = "#FFAAAA";
description = "<&clock> Restarted nightly <&clock>";
web02;
db01;
}
network dmz {
address = "210.x.x.x/24"
user [description = "<&person*4.5>\n user1"];
// set multiple addresses (using comma)
web01 [address = "210.x.x.1, 210.x.x.20",
description = "<&cog*4>\nweb01"]
web02 [address = "210.x.x.2",
description = "<&cog*4>\nweb02"];
}
network internal {
address = "172.x.x.x/24";
web01 [address = "172.x.x.1"];
web02 [address = "172.x.x.2"];
db01 [address = "172.x.x.100",
description = "<&spreadsheet*4>\n db01"];
db02 [address = "172.x.x.101",
description = "<&spreadsheet*4>\n db02"];
ptr
[address = "172.x.x.110",
description = "<&print*4>\n ptr01"];
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
314 / 606


13.7
Same nodes on more than two networks
13
NETWORK DIAGRAM WITH NWDIAG
13.7
Same nodes on more than two networks
You can use same nodes on different networks (more than two networks); nwdiag use in this case ’jump
line’ over networks.
@startuml
nwdiag {
// define group at outside network definitions
group {
color = "#7777FF";
web01;
web02;
db01;
}
network dmz {
color = "pink"
web01;
web02;
}
network internal {
web01;
web02;
db01 [shape = database ];
}
network internal2 {
color = "LightBlue";
web01;
web02;
db01;
}
}
PlantUML Language Reference Guide (1.2025.0)
315 / 606


13.8
Peer networks
13
NETWORK DIAGRAM WITH NWDIAG
@enduml
13.8
Peer networks
Peer networks are simple connections between two nodes, for which we don’t use a horizontal ”busbar”
network
@startuml
nwdiag {
inet [shape = cloud];
inet -- router;
network {
router;
web01;
web02;
}
}
@enduml
13.9
Peer networks and group
13.9.1
Without group
@startuml
nwdiag {
internet [ shape = cloud];
PlantUML Language Reference Guide (1.2025.0)
316 / 606


13.9
Peer networks and group
13
NETWORK DIAGRAM WITH NWDIAG
internet -- router;
network proxy {
router;
app;
}
network default {
app;
db;
}
}
@enduml
13.9.2
Group on first
@startuml
nwdiag {
internet [ shape = cloud];
internet -- router;
group {
color = "pink";
app;
db;
}
network proxy {
router;
app;
}
network default {
app;
db;
}
}
PlantUML Language Reference Guide (1.2025.0)
317 / 606


13.9
Peer networks and group
13
NETWORK DIAGRAM WITH NWDIAG
@enduml
13.9.3
Group on second
@startuml
nwdiag {
internet [ shape = cloud];
internet -- router;
network proxy {
router;
app;
}
group {
color = "pink";
app;
db;
}
network default {
app;
db;
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
318 / 606


13.9
Peer networks and group
13
NETWORK DIAGRAM WITH NWDIAG
13.9.4
Group on third
@startuml
nwdiag {
internet [ shape = cloud];
internet -- router;
network proxy {
router;
app;
}
network default {
app;
db;
}
group {
color = "pink";
app;
db;
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
319 / 606


13.10
Add title, caption, header, footer or legend on network diagram
13
NETWORK DIAGRAM WITH NWDIAG
[Ref. Issue#408 and QA-12655]
13.10
Add title, caption, header, footer or legend on network diagram
@startuml
header some header
footer some footer
title My title
nwdiag {
network inet {
web01 [shape = cloud]
}
}
legend
The legend
end legend
caption This is caption
@enduml
PlantUML Language Reference Guide (1.2025.0)
320 / 606


13.11
With or without shadow
13
NETWORK DIAGRAM WITH NWDIAG
[Ref. QA-11303 and Common commands]
13.11
With or without shadow
13.11.1
With shadow (by default)
@startuml
nwdiag {
network nw {
server;
internet;
}
internet [shape = cloud];
}
@enduml
13.11.2
Without shadow
@startuml
<style>
root {
shadowing 0
}
</style>
nwdiag {
network nw {
server;
internet;
}
internet [shape = cloud];
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
321 / 606


13.12
Change width of the networks
13
NETWORK DIAGRAM WITH NWDIAG
[Ref. QA-14516]
13.12
Change width of the networks
You can change the width of the networks, especially in order to have the same full width for only some
or all networks.
Here are some examples, with all the possibilities.
13.12.1
First example
• without
@startuml
nwdiag {
network NETWORK_BASE {
dev_A [address = "dev_A" ]
dev_B [address = "dev_B" ]
}
network IntNET1 {
dev_B [address = "dev_B1" ]
dev_M [address = "dev_M1" ]
}
network IntNET2 {
dev_B [address = "dev_B2" ]
dev_M [address = "dev_M2" ]
}
}
@enduml
• only the first
@startuml
nwdiag {
network NETWORK_BASE {
width = full
PlantUML Language Reference Guide (1.2025.0)
322 / 606


13.12
Change width of the networks
13
NETWORK DIAGRAM WITH NWDIAG
dev_A [address = "dev_A" ]
dev_B [address = "dev_B" ]
}
network IntNET1 {
dev_B [address = "dev_B1" ]
dev_M [address = "dev_M1" ]
}
network IntNET2 {
dev_B [address = "dev_B2" ]
dev_M [address = "dev_M2" ]
}
}
@enduml
• the first and the second
@startuml
nwdiag {
network NETWORK_BASE {
width = full
dev_A [address = "dev_A" ]
dev_B [address = "dev_B" ]
}
network IntNET1 {
width = full
dev_B [address = "dev_B1" ]
dev_M [address = "dev_M1" ]
}
network IntNET2 {
dev_B [address = "dev_B2" ]
dev_M [address = "dev_M2" ]
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
323 / 606


13.12
Change width of the networks
13
NETWORK DIAGRAM WITH NWDIAG
• all the network (with same full width)
@startuml
nwdiag {
network NETWORK_BASE {
width = full
dev_A [address = "dev_A" ]
dev_B [address = "dev_B" ]
}
network IntNET1 {
width = full
dev_B [address = "dev_B1" ]
dev_M [address = "dev_M1" ]
}
network IntNET2 {
width = full
dev_B [address = "dev_B2" ]
dev_M [address = "dev_M2" ]
}
}
@enduml
13.12.2
Second example
• without
PlantUML Language Reference Guide (1.2025.0)
324 / 606


13.12
Change width of the networks
13
NETWORK DIAGRAM WITH NWDIAG
@startuml
nwdiag {
e1
network n1 {
e1
e2
e3
}
network n2 {
e3
e4
e5
}
network n3 {
e2
e6
}
}
@enduml
• only the first
@startuml
nwdiag {
e1
network n1 {
width = full
e1
e2
e3
}
network n2 {
e3
e4
PlantUML Language Reference Guide (1.2025.0)
325 / 606


13.12
Change width of the networks
13
NETWORK DIAGRAM WITH NWDIAG
e5
}
network n3 {
e2
e6
}
}
@enduml
• the first and the second
@startuml
nwdiag {
e1
network n1 {
width = full
e1
e2
e3
}
network n2 {
width = full
e3
e4
e5
}
network n3 {
e2
e6
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
326 / 606


13.12
Change width of the networks
13
NETWORK DIAGRAM WITH NWDIAG
• all the network (with same full width)
@startuml
nwdiag {
e1
network n1 {
width = full
e1
e2
e3
}
network n2 {
width = full
e3
e4
e5
}
network n3 {
width = full
e2
e6
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
327 / 606


13.13
Other internal networks
13
NETWORK DIAGRAM WITH NWDIAG
13.13
Other internal networks
You can define other internal networks (TCP/IP, USB, SERIAL,...).
• Without address or type
@startuml
nwdiag {
network LAN1 {
a [address = "a1"];
}
network LAN2 {
a [address = "a2"];
switch;
}
switch -- equip;
equip -- printer;
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
328 / 606


13.13
Other internal networks
13
NETWORK DIAGRAM WITH NWDIAG
• With address or type
@startuml
nwdiag {
network LAN1 {
a [address = "a1"];
}
network LAN2 {
a [address = "a2"];
switch [address = "s2"];
}
switch -- equip;
equip [address = "e3"];
equip -- printer;
printer [address = "USB"];
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
329 / 606


13.14
Using (global) style
13
NETWORK DIAGRAM WITH NWDIAG
[Ref. QA-12824]
13.14
Using (global) style
13.14.1
Without style (by default)
@startuml
nwdiag {
network DMZ {
address = "y.x.x.x/24"
web01 [address = "y.x.x.1"];
web02 [address = "y.x.x.2"];
}
network Internal {
web01;
web02;
db01 [address = "w.w.w.z", shape = database];
}
group {
description = "long group label";
web01;
web02;
db01;
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
330 / 606


13.14
Using (global) style
13
NETWORK DIAGRAM WITH NWDIAG
13.14.2
With style
You can use style to change rendering of elements.
@startuml
<style>
nwdiagDiagram {
network {
BackGroundColor green
LineColor red
LineThickness 1.0
FontSize 18
FontColor navy
}
server {
BackGroundColor pink
LineColor yellow
LineThickness 1.0
' FontXXX only for description or label
FontSize 18
FontColor #blue
}
arrow {
' FontXXX only for address
FontSize 17
FontColor #red
FontName Monospaced
LineColor black
}
group {
BackGroundColor cadetblue
LineColor black
LineThickness 2.0
FontSize 11
FontStyle bold
Margin 5
Padding 5
}
}
</style>
nwdiag {
PlantUML Language Reference Guide (1.2025.0)
331 / 606


13.15
Appendix: Test of all shapes on Network diagram (nwdiag)
13
NETWORK DIAGRAM WITH NWDIAG
network DMZ {
address = "y.x.x.x/24"
web01 [address = "y.x.x.1"];
web02 [address = "y.x.x.2"];
}
network Internal {
web01;
web02;
db01 [address = "w.w.w.z", shape = database];
}
group {
description = "long group label";
web01;
web02;
db01;
}
}
@enduml
[Ref. QA-14479]
13.15
Appendix: Test of all shapes on Network diagram (nwdiag)
@startuml
nwdiag {
network Network {
Actor
[shape = actor]
Agent
[shape = agent]
Artifact
[shape = artifact]
Boundary
[shape = boundary]
Card
[shape = card]
Cloud
[shape = cloud]
Collections [shape = collections]
Component
[shape = component]
}
}
@enduml
PlantUML Language Reference Guide (1.2025.0)
332 / 606


13.15
Appendix: Test of all shapes on Network diagram (nwdiag)
13
NETWORK DIAGRAM WITH NWDIAG
@startuml
nwdiag {
network Network {
Control
[shape = control]
Database
[shape = database]
Entity
[shape = entity]
File
[shape = file]
Folder
[shape = folder]
Frame
[shape = frame]
Hexagon
[shape = hexagon]
Interface
[shape = interface]
}
}
@enduml
@startuml
nwdiag {
network Network {
Label
[shape = label]
Node
[shape = node]
Package
[shape = package]
Person
[shape = person]
Queue
[shape = queue]
Stack
[shape = stack]
Rectangle
[shape = rectangle]
Storage
[shape = storage]
Usecase
[shape = usecase]
}
}
@enduml
TODO: FIXME ￿ol￿￿￿olli￿level￿0￿￿Overlap of label for folder￿olli￿￿￿olli￿level￿0￿￿Hexagon shape is miss-
ing￿olli￿￿￿ol￿￿
PlantUML Language Reference Guide (1.2025.0)
333 / 606


13.15
Appendix: Test of all shapes on Network diagram (nwdiag)
13
NETWORK DIAGRAM WITH NWDIAG
@startuml
nwdiag {
network Network {
Folder [shape = folder]
Hexagon [shape = hexagon]
}
}
@enduml
@startuml
nwdiag {
network Network {
Folder [shape = folder, description = "Test, long long label\nTest, long long label"]
Hexagon [shape = hexagon, description = "Test, long long label\nTest, long long label"]
}
}
@enduml
TODO: FIXME
PlantUML Language Reference Guide (1.2025.0)
334 / 606