{
  "system": {
    "name": "DineOut",
    "description": "DineOut is an android application that aims to digitalize the process of various restaurant management operations including ordering and inventory management and POS.",
    "purpose": "The purpose of DineOut is to improve the performance of the restaurant by eradicating the daily paperwork. With this system the tasks would be performed in less amount of time and more efficiently.",
    "scope": "DineOut is a restaurant management system developed with the intention of automating the day to day tasks in a restaurant like order and inventory management, bill generation and taking feedback. This release of the software would deal with these tasks only whereas more areas might be automated in the future versions of this software."
  },
  "interfaces": {
    "userInterfaces": [
      {
        "name": "Customer Interface",
        "description": "The customer interface will contain three screens: Place Order, Timer and Edit/Cancel Order, and Feedback."
      },
      {
        "name": "Head Chef Interface",
        "description": "In head chef interface, system will show all the current orders in detail ie. all the dishes of a particular order."
      },
      {
        "name": "Hall Manager Interface",
        "description": "Hall manager will have a screen where he will get notification whenever an order is completed."
      },
      {
        "name": "Admin Interface",
        "description": "As Admin is authorized to perform CRUD operations on Staff Members, Menu Items and Inventory Items, He'll be having three different screens for Staff Members, Menu Items, and Inventory."
      }
    ],
    "systemInterfaces": [
      {
        "name": "Firebase Database",
        "description": "System will use Firebase latest version released on October 16, 2018 for database services."
      }
    ],
    "hardwareInterfaces": [
      {
        "name": "Bill Printer",
        "description": "Our system can interact with a hardware device directly, We have to connect our system to the bill printer for handing the hard copy of the bill to the customer."
      },
      {
        "name": "Credit Card Reader",
        "description": "For billing module, we may have to use a credit card reader for payment, but the interaction and the results generated by that reader are just entered into our system manually by the user."
      },
      {
        "name": "Central Screen in Kitchen",
        "description": "the central screen in kitchen which will be displaying the status of order queues."
      }
    ],
    "communicationInterfaces": [
      {
        "name": "HTTP Protocol",
        "description": "DineOut is an android application and it will communicate with Firebase (which is a storage server provided by Google for android developers). Firebase uses HTTP protocol for communication, so our device will follow HTTP protocol when connecting to Firebase."
      }
    ]
  },
  "stakeholders": [
    "Customers",
    "Manager",
    "Head Chef",
    "Admin",
    "Chef"
  ],
  "functional_requirements": {
    "customer": {
      "scroll_through_menu": "Allow Customers to scroll through the menu and select the dishes he/she wants.",
      "cancel_edit_order": "Allow the Customers to cancel/edit the order any time before its prepared.",
      "provide_feedback": "Allow Customers to provide feedback regarding the food and overall service of the restaurant.",
      "request_bill": "Allow Customers to request for bill",
      "ask_for_help": "Allow Customers to ask for help through the system."
    },
    "head_chef": {
      "assign_dishes": "Assign Head Chef to assign the dishes in an order to chefs according to their specialties.",
      "mark_orders_complete": "Allow Head Chef to mark orders complete.",
      "approve_cancellation": "Allow the Head Chef to approve cancellation of dish or order."
    },
    "chef": {
      "view_order_queues": "Show dish queues and their status, for Chefs."
    },
    "admin": {
      "crud_operations": "Allow admin to perform CRUD (create, retrieve, update and delete) operations on Staff Members, Menu Items and Inventory."
    },
    "hall_manager": {
      "mark_bill_paid": "Allow Hall Manager to mark the bill as: paid.",
      "notify_order_complete": "Notify the Hall Manager when a particular order is complete.",
      "view_edit_tables": "Allow Hall Manager to see/edit status of tables reserved and available and their capacities."
    },
    "system": {
      "store_orders": "Store orders in 'pending orders' table in Firebase database.",
      "notify_head_chef": "Notify Head Chef of pending orders.",
      "update_order_status": "Update order status when each item/dish in an order is prepared.",
      "print_bill": "Print bill through Manager's interface."
    }
  }
}