{
  "system": {
    "name": "DineOut",
    "description": "DineOut is an android application that aims to digitalize the process of various restaurant management operations including ordering and inventory management and POS.",
    "purpose": "The purpose of DineOut is to improve the performance of the restaurant by eradicating the daily paperwork. With this system the tasks would be performed in less amount of time and more efficiently.",
    "scope": "DineOut is a restaurant management system developed with the intention of automating the day to day tasks in a restaurant like order and inventory management, bill generation and taking feedback. This release of the software would deal with these tasks only whereas more areas might be automated in the future versions of this software."
  },
  "functional_requirements": {
    "place_order": {
      "description": "The system will give customers the ability to place their orders using the product.",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Customer taps on an available dish.",
          "response": "System shows a popup having name of the dish and price per serving. Also, it contains a text box for the customer to enter the quantity, OK button and a Cancel button."
        },
        {
          "stimulus": "Customer enters the quantity and press OK button.",
          "response": "System closes the popup, shows a small green tick mark at the side of dish, Below the tick mark it shows quantity selected and total price of that dish."
        }
      ],
      "requirements": [
        "REQ-1: The system will show a list of cards (UI element) of dishes. Each card will have a picture of the dish, Below the dish it shows the price in Rupees per serving.",
        "REQ-2: The system must show all available and unavailable dishes to the Customer.",
        "REQ-3: Tap on any of the displayed dish will result in a popup for quantity and a green mark after quantity has been selected.",
        "REQ-4: The popup for quantity input will not allow the user to enter letters, negative numbers or any invalid characters.",
        "REQ-5: After completing the order the system will display a timer 'Time to complete the order' and it is the total time required to serve the dish keeping in view the previously queued orders, Moreover, it also shows a cancel order button."
      ]
    },
    "customer_help": {
      "description": "Our system will provide help for the customer if the customer faces issues in using the tab.",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Customer taps on the help button.",
          "response": "System shows a popup with two buttons, 'Call a waiter to manage order', 'Call a waiter for help'"
        },
        {
          "stimulus": "Customer taps on any of the button.",
          "response": "System closes the popup and sends a notification to the Hall Manager, Notification will include the table number of the Customer."
        }
      ],
      "requirements": [
        "REQ-1: The system must give Customer the ability to ask for help.",
        "REQ-2: When the customer taps on 'Call the waiter to manage order'. the system must store that the above order was given by the waiter."
      ]
    },
    "chef_order_queue": {
      "description": "Whenever a new order is placed by the Customer, the dishes in the orders are classified into categories.",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Customer taps the 'Confirm Order' button in 'Place Order screen'",
          "response": "Displays the dishes on kitchen screen in corresponding chefs queue"
        }
      ],
      "requirements": [
        "REQ-1: System will classify the dishes in the order according to category and add this dish on a particular chef's queue in the kitchen screen."
      ]
    },
    "edit_order": {
      "description": "Customer can edit the order any time before the serving.",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Customer taps on 'Edit Order' button",
          "response": "System shows the previous menu screen where selected dishes are already marked with green tick."
        },
        {
          "stimulus": "Customer taps on any of the selected dish.",
          "response": "System opens a popup with previous quantity pre-filled. This popup will also contain a button 'Remove Dish'."
        }
      ],
      "requirements": [
        "REQ-1: System must allow the Customer to increase, decrease or even remove the dish from the order any time before serving.",
        "REQ-2: System must remove the dish or decrease quantity of the dish with the approval of head chef."
      ]
    },
    "cancel_order": {
      "description": "Our system will also provide an option to cancel the current order.",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Customer taps on the 'Cancel Order' button",
          "response": "system responds with a popup 'Order canceled successfully' or 'Order cannot be cancelled'"
        }
      ],
      "requirements": [
        "REQ-1: System must allow the customer to cancel order at any time before serving.",
        "REQ-2: In cancel order, all the dishes will be presented for approval to the head chef. Only approved dishes will be dropped."
      ]
    },
    "mark_dish_as_cooked": {
      "description": "The head chef can mark the dish of a particular order complete when notified by the chef.",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Head chef taps on the 'Mark Cooked' button on a dish in an order.",
          "response": "System changes that button to a green tick."
        }
      ],
      "requirements": [
        "REQ-1: System must send a notification to the hall manager once all the dishes of a particular order has been marked 'cooked'.",
        "REQ-2: System must replace the timer screen with a new screen having feedback and request bill options."
      ]
    },
    "request_bill": {
      "description": "Request bill option gives the ability to the customer to ask for receipt and pay the bill",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Customer taps on the request bill button",
          "response": "The system prints the bill through a printer. System will add a bill to the hall manager's view with the button that says 'paid'."
        }
      ],
      "requirements": [
        "REQ-1: The system must notify the hall manager that a customer has requested for a bill",
        "REQ-2: The system must show Hall manager the order no, table no and total payable amount",
        "REQ-3: The system must give ability to the hall manager to change the status of the bill to paid."
      ]
    },
    "customer_feedback": {
      "description": "The system will give customers the ability to give a feedback for the food or overall services.",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "The customer taps on request bill option",
          "response": "the system shows a feedback screen with multiple choice questions and a submit button"
        }
      ],
      "requirements": [
        "REQ-1: System must show the feedback screen to the user.",
        "REQ-2: System must display multiple choice questions for feedback."
      ]
    },
    "add_edit_delete_staff_members": {
      "description": "The system gives ability to the admin to add, edit and delete staff members",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Admin taps on 'Add Staff button",
          "response": "System opens another screen with a form"
        }
      ],
      "requirements": [
        "REQ-1: Admin should be able to add all necessary information about the staff member",
        "REQ-2: System must give admin the ability to edit information about all staff members",
        "REQ-3: System must give admin the ability to remove staff members."
      ]
    },
    "add_edit_delete_menu_items": {
      "description": "The system gives ability to the admin to add, edit and delete menu items",
      "priority": "high",
      "stimulus_response_sequences": [
        {
          "stimulus": "Admin taps on 'Add Dish' button",
          "response": "System opens another screen with a form"
        }
      ],
      "requirements": [
        "REQ-1: Admin should be able to add all necessary information about the dish",
        "REQ-2: System must give admin the ability to edit information about all menu items",
        "REQ-3: System must give admin the ability to remove menu items."
      ]
    }
  },
  "stakeholders": [
    {
      "name": "Customers",
      "description": "Users who place orders and interact with the system"
    },
    {
      "name": "Managers",
      "description": "Users who manage tables and monitor the system"
    },
    {
      "name": "Head Chefs",
      "description": "Users who assign orders to chefs and manage the kitchen"
    },
    {
      "name": "Admins",
      "description": "Users who have administrative privileges"
    },
    {
      "name": "Chefs",
      "description": "Users who prepare orders and interact with the system"
    },
    {
      "name": "Restaurants",
      "description": "Organizations that use the DineOut system"
    }
  ]
}